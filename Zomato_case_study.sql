create database Zomato_case_study;

-- Create the table with custom date format
CREATE TABLE goldusers_signup (
    userid INTEGER,
    gold_signup_date DATE
);
-- Insert data into the table with 'DD-MM-YYYY' date format
INSERT INTO goldusers_signup (userid, gold_signup_date)
VALUES 
    (1, STR_TO_DATE('22-09-2017', '%d-%m-%Y')),
    (3, STR_TO_DATE('21-04-2017', '%d-%m-%Y'));

CREATE TABLE users(userid integer,signup_date date); 
INSERT INTO users(userid,signup_date) 
 VALUES (1,STR_TO_DATE('02-09-2014','%d-%m-%Y')),
(2,STR_TO_DATE('15-01-2015','%d-%m-%Y')),
(3,STR_TO_DATE('04-11-2014','%d-%m-%Y'));

CREATE TABLE sales(userid integer,created_date date,product_id integer); 
INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'2017-04-19',2),
(3,'2019-12-18',1),
(2,'2020-07-20',3),
(1,'2019-10-23',2),
(1,'2018-03-19',3),
(3,'2016-12-20',2),
(1,'2016-11-09',1),
(1,'2016-05-20',3),
(2,'2017-09-24',1),
(1,'2017-03-11',2),
(1,'2016-03-11',1),
(3,'2016-11-10',1),
(3,'2017-12-07',2),
(3,'2016-12-15',2),
(2,'2017-11-08',2),
(2,'2018-09-10',3);



CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);


select * from goldusers_signup;
select * from sales;
select * from product;
select * from users;


#Q1. What is total amount each customer spent on zomato?
select s.userid, sum(p.price) as total_spent
from sales s 
    join product p 
        on s.product_id = p.product_id
	group by  s.userid;  
    
#Q2. How many days has each customer visited zomato?
select userid, count(userid) as num_customer_visited
from sales
   where created_date is not null
    group by userid
    order by userid;
#####  OR  ######
select userid, count(distinct created_date) as num_customer_visited
from sales
group by userid;

#Q3. What was the first product purchase by each customer
select * 
     from (select * , rank() over(partition by userid order by created_date) as rnk from sales) a 
           where rnk =1; 

#Q4. What is the most purchase item on the menu and how many time was it purchased by all customer?
select userid, count(product_id) as product_count from sales
 where product_id = (select product_id from sales
					  group by product_id
				 order by count(product_id) desc
			 limit 1) 
	group by userid;
    
#Q5. Which item was the most popular for each customer
select * 
from (select * , rank() over(partition by userid order by most_pop desc) rnk 
	  from (select userid, product_id , count(product_id) as most_pop
             from sales
             group by userid, product_id
             ) a
	 )b
where rnk = 1;

#Q6. Which item was purchased first by the customer after they become a member?
select * 
 from (select c.* , rank() over(partition by userid order by created_date) rnk 
        from (select  s.userid, s.product_id, s.created_date, g.gold_signup_date
               from sales s 
	            join goldusers_signup g
		          on s.userid = g.userid
	               and s.created_date >= g.gold_signup_date
		      ) as c 
      ) as d 
where rnk = 1;

#Q7. Which item purchased just before the customer become a member?
  select * 
      from (select c.* , rank() over(partition by userid order by created_date desc) rnk from 
               (select s.userid, s.product_id, s.created_date, g.gold_signup_date from sales s 
				   join goldusers_signup g on s.userid = g.userid and s.created_date <= g.gold_signup_date
			    ) as c 
			) as d 
where rnk = 1;

#Q8. What is the total orders and amount spent for each customer before they become member?
SELECT
    s.userid,
    COUNT(s.created_date) AS total_order,
    SUM(p.price) AS amount_spent
FROM
    sales s
JOIN
    goldusers_signup g ON s.userid = g.userid AND s.created_date <= g.gold_signup_date
JOIN
    product p ON s.product_id = p.product_id
GROUP BY
    s.userid
ORDER BY
    s.userid;

#Q9.  What is the total revenue generated by Zomato on each day?
SELECT DATE(created_date) AS order_date, SUM(p.price) AS total_revenue
FROM sales s
JOIN product p ON s.product_id = p.product_id
WHERE created_date IS NOT NULL
GROUP BY order_date
ORDER BY order_date;

#Q10. Which product category has the highest total sales?
SELECT p.product_name, SUM(p.price) AS total_sales
FROM sales s
JOIN product p ON s.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_sales DESC
LIMIT 1;
